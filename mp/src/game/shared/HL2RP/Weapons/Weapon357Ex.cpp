#include <cbase.h>
#include <hl2mp/weapon_357.h>

#ifdef CLIENT_DLL
#define CWeapon357Ex	C_Weapon357Ex
#endif // CLIENT_DLL

//------------------------------------
// CWeapon357Ex (HL2RP expansion)
//------------------------------------
class CWeapon357Ex : public CWeapon357
{
	DECLARE_CLASS(CWeapon357Ex, CWeapon357);
	DECLARE_PREDICTABLE();

#ifndef HL2DM_RP
	DECLARE_NETWORKCLASS();
#endif // !HL2DM_RP

#ifndef CLIENT_DLL
	DECLARE_ACTTABLE();
#endif // !CLIENT_DLL
};

#ifndef HL2DM_RP
IMPLEMENT_NETWORKCLASS_ALIASED(Weapon357Ex, DT_Weapon357Ex);

BEGIN_NETWORK_TABLE(CWeapon357Ex, DT_Weapon357Ex)
END_NETWORK_TABLE();
#endif // !HL2DM_RP

LINK_ENTITY_TO_CLASS(weapon_357, CWeapon357Ex);

#ifdef CLIENT_DLL
BEGIN_PREDICTION_DATA(CWeapon357Ex)
END_PREDICTION_DATA();
#else
acttable_t CWeapon357Ex::m_acttable[] =
{
	{ ACT_RANGE_ATTACK1, ACT_RANGE_ATTACK_PISTOL, true },
	{ ACT_HL2MP_IDLE, ACT_HL2MP_IDLE_PISTOL, true },
	{ ACT_HL2MP_RUN, ACT_HL2MP_RUN_PISTOL, true },
	{ ACT_HL2MP_IDLE_CROUCH, ACT_HL2MP_IDLE_CROUCH_PISTOL, true },
	{ ACT_HL2MP_WALK_CROUCH, ACT_HL2MP_WALK_CROUCH_PISTOL, true },
	{ ACT_HL2MP_GESTURE_RANGE_ATTACK, ACT_HL2MP_GESTURE_RANGE_ATTACK_PISTOL, true },
	{ ACT_HL2MP_GESTURE_RELOAD, ACT_HL2MP_GESTURE_RELOAD_PISTOL, true },
	{ ACT_HL2MP_JUMP, ACT_HL2MP_JUMP_PISTOL, true },
	{ ACT_IDLE, ACT_IDLE_PISTOL, true },
	{ ACT_IDLE_ANGRY, ACT_IDLE_ANGRY_PISTOL, true },
	{ ACT_RELOAD, ACT_RELOAD_PISTOL, true },
	{ ACT_WALK_AIM, ACT_WALK_AIM_PISTOL, true },
	{ ACT_RUN_AIM, ACT_RUN_AIM_PISTOL, true },
	{ ACT_GESTURE_RANGE_ATTACK1, ACT_GESTURE_RANGE_ATTACK_PISTOL, true },
	{ ACT_RELOAD_LOW, ACT_RELOAD_PISTOL_LOW, true },
	{ ACT_RANGE_ATTACK1_LOW, ACT_RANGE_ATTACK_PISTOL_LOW, true },
	{ ACT_COVER_LOW, ACT_COVER_PISTOL_LOW, true },
	{ ACT_RANGE_AIM_LOW, ACT_RANGE_AIM_PISTOL_LOW, true },
	{ ACT_GESTURE_RELOAD, ACT_GESTURE_RELOAD_PISTOL, true },
	{ ACT_WALK, ACT_WALK_PISTOL, true },
	{ ACT_RUN, ACT_RUN_PISTOL, true }
};

IMPLEMENT_ACTTABLE(CWeapon357Ex);
#endif // CLIENT_DLL
